name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Tests Backend
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Backend Tests with Coverage
        working-directory: ./back
        run: mvn clean test jacoco:report

      - name: Upload Backend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

  # Job 2: Tests Frontend
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json
      - name: Install dependencies
        working-directory: ./front
        run: npm ci

      - name: Run Frontend Tests with Coverage
        working-directory: ./front
        run: npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless

      - name: Upload Frontend Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/

  # Job 3: SonarCloud Analysis
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download Backend Coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: back/target/site/jacoco/

      - name: Build and analyze Backend
        working-directory: ./back
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Arnaud1720_Gerez-un-projet-collaboratif-int-grant-une-d-marche-CI-CD-P10

  # Job 4: Build
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, sonarcloud]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Backend
        working-directory: ./back
        run: mvn clean package -DskipTests

      - name: Upload Backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: back/target/*.jar

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Build Frontend
        working-directory: ./front
        run: |
          npm ci
          npm run build

      - name: Upload Frontend Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: front/dist/

  # Job 5: Docker Build & Pushh
  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Backend JAR
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: back/target/

      - name: Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: front/dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: |
            arnaudd3380/bobapp-backend:latest
            arnaudd3380/bobapp-backend:${{ github.sha }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front
          push: true
          tags: |
            arnaudd3380/bobapp-frontend:latest
            arnaudd3380/bobapp-frontend:${{ github.sha }}